<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>objective c &#8211; Flying Bug</title>
	<atom:link href="https://xiehang.com/blog/tag/objective-c/feed/" rel="self" type="application/rss+xml" />
	<link>https://xiehang.com/blog</link>
	<description>Debugging and Being Debugged</description>
	<lastBuildDate>Wed, 27 May 2009 20:24:59 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.1</generator>
	<item>
		<title>Hello world is always easy</title>
		<link>https://xiehang.com/blog/2009/05/23/hello-world-is-always-easy/</link>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Sun, 24 May 2009 06:07:35 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[mac]]></category>
		<category><![CDATA[objective c]]></category>
		<category><![CDATA[osx]]></category>
		<category><![CDATA[xcode]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=413</guid>

					<description><![CDATA[Finished HelloWorld with Objective-C on Mac using Xcode, everything seems fine, though I know hello world is always simple and easy. It seems to me Objective-C is something similar to smalltalk, but I&#8217;m not quite sure as I&#8217;m not familiar with smalltalk either. Anyway the syntax is sort of weird to me, as it does <a href='https://xiehang.com/blog/2009/05/23/hello-world-is-always-easy/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>Finished HelloWorld with Objective-C on Mac using Xcode, everything seems fine, though I know hello world is always simple and easy.</p>
<p>It seems to me Objective-C is something similar to smalltalk, but I&#8217;m not quite sure as I&#8217;m not familiar with smalltalk either. Anyway the syntax is sort of weird to me, as it does not like a procedure/function oriented language, but more like a functional one.</p>
<p>I will keep play with Xcode for sometime during this long weekend, and back to my PPCam (Ada on Windows using GNAT) next week &#8211; again, it is not just as simple as hello world, get to spend more time to get things done.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Which application type is suitable for Mac?</title>
		<link>https://xiehang.com/blog/2009/05/21/which-application-type-is-suitable-for-mac/</link>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Thu, 21 May 2009 19:41:22 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[apple]]></category>
		<category><![CDATA[carbon]]></category>
		<category><![CDATA[cocoa]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[mac]]></category>
		<category><![CDATA[objective c]]></category>
		<category><![CDATA[osx]]></category>
		<category><![CDATA[xcode]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/2009/05/21/which-application-type-is-suitable-for-mac/</guid>

					<description><![CDATA[I don&#8217;t quite understand application types under Mac (OS X), I remember I stopped trying out XCode just because I cannot determine which one to use, and I also made wrong assumption that Java is the way to go as I can share (some) source codes cross platforms. Now I got a book talking about <a href='https://xiehang.com/blog/2009/05/21/which-application-type-is-suitable-for-mac/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>I don&#8217;t quite understand application types under Mac (OS X), I remember I stopped trying out XCode just because I cannot determine which one to use, and I also made wrong assumption that Java is the way to go as I can share (some) source codes cross platforms.</p>
<p>Now I got a book talking about how to build Mac applications with XCode, and it clearly stated:</p>
<p>For Carbon:</p>
<blockquote><p><span style="font-size: 12pt; line-height: 115%; font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">The Carbon template defines a pure Carbon application. Carbon is the C interfaces to Aqua and the legacy support for applications written using the APIs in Mac OS 9 and earlier. Use this template if you are porting an application from OS 9 to OS X, or you want to create native applications using only C or C++. The main.c file includes a skeletal application that loads the main.nib file, creates the application&#8217;s window, and starts the main event loop. See <a href="http://developer.apple.com/carbon/" target="_top"><span style="color: blue;">http://developer.apple.com/carbon/</span></a> for more information about Carbon applications.</span></p></blockquote>
<p>For Java/Cocoa:</p>
<blockquote><p><span style="font-size: 12pt; line-height: 115%; font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">Mac OS X includes an extensive bridge between the Java programming language and the Objective-C APIs defined in the Cocoa framework. These Java proxy objects make it possible to use most of the Cocoa and Foundation frameworks as though they had been written in Java. If you need to create a native Cocoa application and prefer, or require, the Java programming language, create a Cocoa-Java application. The template sets up a Cocoa application whose native executable is the Cocoa-Java stub. This stub application creates a Java runtime, that loads and starts the Java classes which constitute the application. Read more about mixing Java and Cocoa at <a href="http://developer.apple.com/documentation/Cocoa/Java-date.html" target="_top"><span style="color: blue;">http://developer.apple.com/documentation/Cocoa/Java-date.html</span></a>. Apple has recently announced that it will no longer be updating in the Cocoa-Java bridge beyond Mac OS X 10.3, so the future of this technology is murky.<br />
</span></p></blockquote>
<p>For Cocoa:</p>
<blockquote><p><span style="font-size: 12pt; line-height: 115%; font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;">Cocoa is the preferred application development technology for Mac OS X. It is based on the Objective-C programming language. The Cocoa framework is the Objective-C interfaces to Aqua and most other Apple technologies. If OS X has a &#8220;native&#8221; development environment, Objective-C and Cocoa are it. A few technologies are only available using Cocoa interfaces. The Cocoa template creates a minimal Cocoa application. The only functional part of the project is the main.m file which does nothing but create and start the generic </span><span style="font-size: 10pt; line-height: 115%; font-family: &quot;Courier New&quot;;">NSApplication</span><span style="font-size: 12pt; line-height: 115%; font-family: &quot;Times New Roman&quot;,&quot;serif&quot;;"> object. It does provide generic handling of the About This Program menu item, but it does not include a Credits.rtf file. </span></p></blockquote>
<p>From three paragraphs above, it is clearly Java is NOT the way to go, it will be dropped by Apple sometime in the future, also Carbon is for legacy applications.</p>
<p>So, the right way is indeed doing Cocoa application with Objective-C, I get to read around to see if I can get some tests done.</p>
<p>I&#8217;ve upgraded my PowerBook months back with latest OS X (Leopard), plus makek it 2G memory, so that I&#8217;ve been able to install XCode, however, the machine had been idle since the upgrade, I should do something so not to waste my money (I have enough time now, not using my time is just a waste).</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
