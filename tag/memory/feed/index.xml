<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>memory &#8211; Flying Bug</title>
	<atom:link href="https://xiehang.com/blog/tag/memory/feed/" rel="self" type="application/rss+xml" />
	<link>https://xiehang.com/blog</link>
	<description>Debugging and Being Debugged</description>
	<lastBuildDate>Mon, 29 Jul 2013 16:56:26 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.2</generator>
	<item>
		<title>Is redis much more stable than memcached?</title>
		<link>https://xiehang.com/blog/2013/07/29/is-redis-much-more-stable-than-memcached/</link>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Mon, 29 Jul 2013 16:56:26 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[memcached]]></category>
		<category><![CDATA[memory]]></category>
		<category><![CDATA[redis]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=1558</guid>

					<description><![CDATA[I got a weird feeling that redis is more stable than memcached &#8230; but I don&#8217;t have solid evidence for that. The case is, I migrated an application&#8217;s backend from memcached to redis, there were surely some other bug fixes and trivial performance tuning, but thinking of the memcached version had been running in production <a href='https://xiehang.com/blog/2013/07/29/is-redis-much-more-stable-than-memcached/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>I got a weird feeling that redis is more stable than memcached &#8230; but I don&#8217;t have solid evidence for that.</p>
<p>The case is, I migrated an application&#8217;s backend from memcached to redis, there were surely some other bug fixes and trivial performance tuning, but thinking of the memcached version had been running in production for more than 6 months without any significant problem, I wouldn&#8217;t think my changes make any big difference. Also, I changed my codes only, nothing to do with redis/memcached so I think it&#8217;s a fair comparison.</p>
<p>memcached use to hit 6GB memory (VIRT) usage after a week to 10 days running, then for most cases it will crash cos ops people set RAM limitation. Ops people asked me to do a restart once the memory utilization hit a certain level, but I found that restart memcached will simply wipe out all my in-memory-only data like counter, which is not critical but will make the application looks weird (&#8220;no more visitor in the past 7 days???&#8221;), and this initiated the migration to redis.</p>
<p>After migrated to redis, the memory utilization started from 4200MB, and one of the oldest instance had been running there since Jun 4 (50+ days till now), and memory is at 4300MB. I <strong><em>guess</em> </strong>the increment was due to data size growth instead of memory leak, though again, I don&#8217;t have evidence.</p>
<p>Anyway, I&#8217;m not going to go back to memcached in the future, so the difference won&#8217;t bother me.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Hadoop &#8211; java.io.IOException: error=12, Cannot allocate memory</title>
		<link>https://xiehang.com/blog/2012/02/07/hadoop-java-io-ioexception-error12-cannot-allocate-memory/</link>
					<comments>https://xiehang.com/blog/2012/02/07/hadoop-java-io-ioexception-error12-cannot-allocate-memory/#comments</comments>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Tue, 07 Feb 2012 23:18:20 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[hadoop]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[memory]]></category>
		<category><![CDATA[swap]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=1254</guid>

					<description><![CDATA[I hit this problem in my project which is hadoop-based: Cannot run program "chmod": java.io.IOException: error=12, Cannot allocate memory Did some research but found nothing useful &#8211; everybody mentioned it&#8217;s JDK&#8217;s problem not using fork()+exec() which caused excessive memory allocated during spawning new process for running shell command. However, it&#8217;s weird that I hit this <a href='https://xiehang.com/blog/2012/02/07/hadoop-java-io-ioexception-error12-cannot-allocate-memory/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>I hit this problem in my project which is hadoop-based:</p>
<pre>
Cannot run program "chmod": java.io.IOException: error=12, Cannot allocate memory
</pre>
<p>Did some research but found nothing useful &#8211; everybody mentioned it&#8217;s JDK&#8217;s problem not using fork()+exec() which caused excessive memory allocated during spawning new process for running shell command. However, it&#8217;s weird that I hit this problem on my AWS micro instance only, not on my MacBook, so I moved on to check some more &#8211;</p>
<p>It turned out swap is a problem, my micro instance in AWS does not have swap enabled (i.e. zero swap space), after add 1G swap everything&#8217;s fine now.</p>
<p>I&#8217;m a Java newbie, so my question is, though it got solved, did I do something properly?</p>
]]></content:encoded>
					
					<wfw:commentRss>https://xiehang.com/blog/2012/02/07/hadoop-java-io-ioexception-error12-cannot-allocate-memory/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
	</channel>
</rss>
