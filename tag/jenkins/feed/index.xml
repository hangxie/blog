<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>jenkins &#8211; Flying Bug</title>
	<atom:link href="https://xiehang.com/blog/tag/jenkins/feed/" rel="self" type="application/rss+xml" />
	<link>https://xiehang.com/blog</link>
	<description>Debugging and Being Debugged</description>
	<lastBuildDate>Tue, 28 Jan 2014 18:08:54 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.2</generator>
	<item>
		<title>Keep playing yum, rpmbuild, and chroot</title>
		<link>https://xiehang.com/blog/2012/12/14/keep-playing-yum-rpmbuild-and-chroot/</link>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Fri, 14 Dec 2012 20:48:35 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[chroot]]></category>
		<category><![CDATA[i386]]></category>
		<category><![CDATA[jenkins]]></category>
		<category><![CDATA[rpmbuild]]></category>
		<category><![CDATA[x86_64]]></category>
		<category><![CDATA[yum]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=1449</guid>

					<description><![CDATA[It&#8217;s pretty fun, now I can create a job in jenkins, then launch two build script, one for CentOS5 and the other for CentOS6, both of them will build x86_64 and i386 packages. setarch is my friend to save my effort on creating 32-bit images over 64-bit system ðŸ˜› , however, I still need to <a href='https://xiehang.com/blog/2012/12/14/keep-playing-yum-rpmbuild-and-chroot/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>It&#8217;s pretty fun, now I can create a job in jenkins, then launch two build script, one for CentOS5 and the other for CentOS6, both of them will build x86_64 and i386 packages.</p>
<p>setarch is my friend to save my effort on creating 32-bit images over 64-bit system <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f61b.png" alt="ðŸ˜›" class="wp-smiley" style="height: 1em; max-height: 1em;" /> , however, I still need to verify if the 32-bit packages is actually working for 32-bit platform.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to chroot</title>
		<link>https://xiehang.com/blog/2012/12/12/how-to-chroot/</link>
					<comments>https://xiehang.com/blog/2012/12/12/how-to-chroot/#comments</comments>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Wed, 12 Dec 2012 08:37:39 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[build]]></category>
		<category><![CDATA[chroot]]></category>
		<category><![CDATA[jenkins]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=1437</guid>

					<description><![CDATA[My colleague setup a jenkins to do nightly and on demand build, it works perfect till last week, whenever we decided to move some components to rpm based packaging so to ease the production deployment and to reproduce the bug. The problem is, whenever you have multiple jobs in jenkins, you cannot yum/rpm install packages <a href='https://xiehang.com/blog/2012/12/12/how-to-chroot/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>My colleague setup a jenkins to do nightly and on demand build, it works perfect till last week, whenever we decided to move some components to rpm based packaging so to ease the production deployment and to reproduce the bug.</p>
<p>The problem is, whenever you have multiple jobs in jenkins, you cannot yum/rpm install packages in different versions. A simple case for us is that we are running boost-1.44, while some team who replies on us requested a new version of boost, we cannot build two set of jobs at same time.<span id="more-1437"></span></p>
<p>So I came up with a idea of setting something that can islolate jenkins jobs. Actually I was thinking of OpenVZ at very beginning, but later on I figured out it may be too complicate to us at least at this stage. I&#8217;m still keeping an eye on OpenVZ, just in case we meet some chroot-cannot-solve problem I may give it a try.</p>
<p>Back to original topic &#8211; I need to have a way to setup an isolated environment for jenkins, it should be easy to create/destroy, while use all standard (CentOS) tools to manage packages. I guess what I did works in Debin/Ubuntu as well &#8211; you just need to replace all yum with apt, and rpm with dpkg <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f61b.png" alt="ðŸ˜›" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>First let&#8217;s create a snapshot of CentOS image first, you don&#8217;t have to create the image if you don&#8217;t care of the speed and network traffic too much, what&#8217;s being done here can put into jenkins jobs but in my case the speed is about 10 times faster by using a snapshot, and definitely it reduce the network data flow (my image has minimum set of development packages, even it installed limited packages, it still need to pull ~300M data from CentOS repo, but sure if you have setup your own repo, that&#8217;s another story).</p>
<p>You should have some common sense of replacing versions/locations below to meet your need, and of course all commands need to be run as root (sudo please):</p>
<ol>
<li>create a directory to be the chroot&#8217;s root, let&#8217;s assume it is in $ROOT_DIR
<pre>mkdir -p $ROOT_DIR</pre>
</li>
<li>bookstrap yum, you can choose other versions as you like (check 5on6 sections below)
<pre>mkdir -vp $ROOT_DIR/var/lib/rpm
rpm -v --rebuilddb --root=$ROOT_DIR
rpm -Uhv --root=$ROOT_DIR --nodeps http://mirror.centos.org/centos/6/os/x86_64/Packages/centos-release-6-3.el6.centos.9.x86_64.rpm
yum --installroot=$ROOT_DIR install -y yum</pre>
</li>
<li>do other necessary configurations &#8211; this is to avoid warning/errors during yum in step #4
<pre>cp -v /var/lib/random-seed $ROOT_DIR/var/lib/random-seed
touch $ROOT_DIR/etc/fstab
cp -v /etc/resolv.conf $ROOT_DIR/etc/resolv.conf</pre>
</li>
<li>this is the image for jenkins, so most likely you need all dev tools
<pre>yum --installroot=$ROOT_DIR groupinstall -y "Development tools"</pre>
</li>
<li>Most likely you need to copy your repo file to $ROOT_DIR/etc/yum.repo.d/</li>
<li>Some file systems need to be mounted (<em><strong><a href="#comment-3778">check comment #1 to see a better solution for this</a></strong></em>)
<pre>mount -o bind /proc $ROOT_DIR/proc
mount -o bind /dev $ROOT_DIR/dev</pre>
</li>
<li>Now you can step into the root and do some other stuffs you want, to me the most important thing is clean up yum cache so that everytime jenkins will pull the most recent package (for our own repo only) instead of using cache
<pre>chroot $ROOT_DIR
[in chroot now] yum clean all
[in chroot now] exit</pre>
</li>
<li>unmount what we mounted before
<pre>umount $ROOT_DIR/proc
umount $ROOT_DIR/dev</pre>
</li>
<li>take an snapshot
<pre>cd $ROOT_DIR
tar zcf /tmp/centos6-20121212-01.tgz *</pre>
</li>
<li>now we have a snapshot under /tmp, named centos6-20121212-01.tgz<br />
<strong>hey, it&#8217;s 12-12-12 now, nice</strong></li>
</ol>
<p>Once you have the snapshot, it becomes pretty easy to use it in jenkins, you have to solve sudo problem first, which allows jenkins user (either jenkins, or apache, or nobody, or tomcat) sudo to run the build.sh without password (ping me if you don&#8217;t know how to), and here are some codes copied from my build.sh:</p>
<pre>mkdir -vp $ROOT_DIR
tar zxf /tmp/centos6-20121212-01.tgz -C $ROOT_DIR
mount -vo bind /proc $ROOT_DIR/proc
mount -vo bind /dev $ROOT_DIR/dev
mount -vo bind /dev/pts $ROOT_DIR/dev/pts
mount -vo bind /sys $ROOT_DIR/sys
chroot $ROOT_DIR yum install -y home-grown-packages
cat &gt; $ROOT_DIR/tmp/build.sh &lt;&lt; EOF
/bin/mkdir -p /tmp/build
cd /tmp/build
mkdir -vp BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
/usr/bin/svn co svn+ssh://blah-blah-blar/foo/bar
cd /tmp/build/BUILD
rpmbuild --define '_topdir /tmp/build' -bb path/to/jenkins.spec
EOF
chmod +x $ROOT_DIR/tmp/build.sh
chroot --userspec=nobody $ROOT_DIR /tmp/build.sh
# some more operations here, copy the final rpm to central repository, copy the test result back to jenkins workspace, etc
umount -v $ROOT_DIR/sys
umount -v $ROOT_DIR/dev/pts
umount -v $ROOT_DIR/dev
umount -v $ROOT_DIR/proc
rm -fr $ROOT_DIR</pre>
<p>Pretty much the commands explained what they do â€¦</p>
<p>There are something more to come soon, people are asking if build CentOS5 packages over CentOS6 is possible or not &#8211; theortically it should work, but I haven&#8217;t tested and I&#8217;m pretty sure there will be some troubles here and there, I will give a shoot tomorrow.</p>
<p>Will post more here in case I find anything interesting.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://xiehang.com/blog/2012/12/12/how-to-chroot/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
	</channel>
</rss>
