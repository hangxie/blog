<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>compile &#8211; Flying Bug</title>
	<atom:link href="https://xiehang.com/blog/tag/compile/feed/" rel="self" type="application/rss+xml" />
	<link>https://xiehang.com/blog</link>
	<description>Debugging and Being Debugged</description>
	<lastBuildDate>Wed, 02 Dec 2009 07:18:07 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.3</generator>
	<item>
		<title>How to build Thrift</title>
		<link>https://xiehang.com/blog/2009/11/13/how-to-build-thrift/</link>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Fri, 13 Nov 2009 18:18:33 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[compile]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[nosql]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=748</guid>

					<description><![CDATA[Finally I had to build my own instead doing package installation, and building Thrift is not that difficult (after you go through it once &#8230;). You definitely need to read requirements for building Thrift, but things are not quite clear at the first glance, dependency list is not clear, so here are what I installed <a href='https://xiehang.com/blog/2009/11/13/how-to-build-thrift/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>Finally I had to build my own instead doing package installation, and building Thrift is not that difficult (after you go through it once &#8230;).</p>
<p>You definitely need to read <a href="http://wiki.apache.org/thrift/ThriftRequirements">requirements for building Thrift</a>, but things are not quite clear at the first glance, dependency list is not clear, so here are what I installed before &#8220;./bootstrap.sh; ./configure; make; sudo make install&#8221;, note that this is the package list for Fedora, but it should be similar to Ubuntu:</p>
<ul>
<li>subversion</li>
<li>gcc-g++</li>
<li>java-1.6.0-openjdk-devel</li>
<li>perl-devel</li>
<li>python-devel</li>
<li>php-devel</li>
<li>mono-devel</li>
<li>boost-devel</li>
<li>libtool</li>
<li>bison</li>
<li>flex</li>
<li>perl-ExtUtils-MakeMaker</li>
</ul>
<p>After all these installed, it will work like a chime.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Hello, world from CLisp on Windows</title>
		<link>https://xiehang.com/blog/2009/07/07/hello-world-from-clisp-on-windows/</link>
					<comments>https://xiehang.com/blog/2009/07/07/hello-world-from-clisp-on-windows/#comments</comments>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Wed, 08 Jul 2009 04:21:32 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[clisp]]></category>
		<category><![CDATA[compile]]></category>
		<category><![CDATA[lisp]]></category>
		<category><![CDATA[windows]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=548</guid>

					<description><![CDATA[Now here are steps to build a Windows application as for &#8220;hello, world&#8221; ðŸ™‚ Create a message.lisp: (use-package "FFI") (def-call-out messagebox (:name "MessageBoxA") (:library "user32.dll") (:arguments (hwnd int) (text c-string) (capt c-string) (type uint)) (:return-type int) (:language :stdc)) (defun main() (messagebox 0 "Hello World!" "Message" 0) (quit)) then run: clisp -M &#8220;C:\Program Files\clisp-2.47\base\lispinit.mem&#8221; -x &#8220;(load <a href='https://xiehang.com/blog/2009/07/07/hello-world-from-clisp-on-windows/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>Now here are steps to build a Windows application as for &#8220;hello, world&#8221; <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Create a message.lisp:</p>
<pre>(use-package "FFI")
(def-call-out messagebox
              (:name "MessageBoxA") (:library "user32.dll")
              (:arguments (hwnd int) (text c-string) (capt c-string) (type uint))
              (:return-type int)
              (:language :stdc))

(defun main()
  (messagebox 0 "Hello World!" "Message" 0)
  (quit))</pre>
<p>then run:</p>
<blockquote><p>clisp -M &#8220;C:\Program Files\clisp-2.47\base\lispinit.mem&#8221; -x &#8220;(load \&#8221;message.lisp\&#8221;)(ext:saveinitmem \&#8221;message\&#8221; :init-function #&#8217;main :executable t :norc t :quiet t)&#8221;<img loading="lazy" class="alignright size-full wp-image-549" title="helloworld" src="https://xiehang.com/blog/wp-content/uploads/2009/07/helloworld.JPG" alt="helloworld" width="104" height="100" /></p></blockquote>
<p>now we have a message.exe under the same directory, run it, you will get a standard Windows message box like this:</p>
<p>Almost all stuffs mentioned here are coming from:</p>
<blockquote><p><a href="http://www.frank-buss.de/lisp/clisp.html">http://www.frank-buss.de/lisp/clisp.html</a></p></blockquote>
<p>except I added &#8220;:quiet t&#8221; to avoid CLisp&#8217;s welcome messages printed out in screen.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://xiehang.com/blog/2009/07/07/hello-world-from-clisp-on-windows/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>usenet helps</title>
		<link>https://xiehang.com/blog/2009/07/03/usenet-helps/</link>
					<comments>https://xiehang.com/blog/2009/07/03/usenet-helps/#comments</comments>
		
		<dc:creator><![CDATA[Hang]]></dc:creator>
		<pubDate>Fri, 03 Jul 2009 19:27:25 +0000</pubDate>
				<category><![CDATA[Triviality]]></category>
		<category><![CDATA[compile]]></category>
		<category><![CDATA[lisp]]></category>
		<category><![CDATA[windows]]></category>
		<guid isPermaLink="false">https://xiehang.com/blog/?p=535</guid>

					<description><![CDATA[While I was trying to dig out how to play with lisp, especially how to create an executable from it, I came across this message posted to c.l.l: http://groups.google.com/group/comp.lang.lisp/msg/a8ffbb6d53f6b3db pretty much what I want ðŸ™‚ I&#8217;ve managed to created a executable on my Windows box and it runs just fine, well, with some tweaks, and <a href='https://xiehang.com/blog/2009/07/03/usenet-helps/' class='excerpt-more'>[...]</a>]]></description>
										<content:encoded><![CDATA[<p>While I was trying to dig out how to play with lisp, especially how to create an executable from it, I came across this message posted to c.l.l:</p>
<p><a href="http://groups.google.com/group/comp.lang.lisp/msg/a8ffbb6d53f6b3db">http://groups.google.com/group/comp.lang.lisp/msg/a8ffbb6d53f6b3db</a></p>
<p>pretty much what I want <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /> I&#8217;ve managed to created a executable on my Windows box and it runs just fine, well, with some tweaks, and actually a follow up describe the Windows dll problem:</p>
<p><a href="http://groups.google.com/group/comp.lang.lisp/msg/71544781ad46b5c3">http://groups.google.com/group/comp.lang.lisp/msg/71544781ad46b5c3</a></p>
]]></content:encoded>
					
					<wfw:commentRss>https://xiehang.com/blog/2009/07/03/usenet-helps/feed/</wfw:commentRss>
			<slash:comments>5</slash:comments>
		
		
			</item>
	</channel>
</rss>
